[{"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\index.js":"1","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reportWebVitals.js":"2","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\App.js":"3","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reducers\\index.js":"4","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reducers\\search.js":"5","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reducers\\isLoggedin.js":"6","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\actions\\index.js":"7","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Plot.js":"8","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\CheckParallel.js":"9","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Map.js":"10","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Song.js":"11","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Tabs.js":"12","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\animations\\loading\\loading.js":"13","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\animations\\RotateDevice\\RotateDevice.js":"14","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\FindIntersection.js":"15","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\SplitLine.js":"16","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\NavBar\\NavBar.js":"17","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\AllSongs\\AllSongs.js":"18","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\hooks\\SongsSearch.js":"19","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\TopBar\\topbar.js":"20","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\Settings\\Settings.js":"21","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\login\\login.js":"22","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\learnTab\\LearnTab.js":"23","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\PlaySong\\PlaySong.js":"24","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\Promt\\Promt.js":"25","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\addGuitar\\AddGuitar.js":"26","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\firebase.js":"27","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\hooks\\Draw.js":"28","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\axios.js":"29","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\Info\\Info.js":"30","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\ImageContainer\\ImageContainer.js":"31","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\Steps\\Steps.js":"32"},{"size":805,"mtime":1619892960466,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1619892960482,"results":"35","hashOfConfig":"34"},{"size":2163,"mtime":1620237636166,"results":"36","hashOfConfig":"34"},{"size":255,"mtime":1619892960478,"results":"37","hashOfConfig":"34"},{"size":580,"mtime":1619892960481,"results":"38","hashOfConfig":"34"},{"size":549,"mtime":1619892960479,"results":"39","hashOfConfig":"34"},{"size":257,"mtime":1619892960230,"results":"40","hashOfConfig":"34"},{"size":712,"mtime":1620237211465,"results":"41","hashOfConfig":"34"},{"size":323,"mtime":1620237274837,"results":"42","hashOfConfig":"34"},{"size":858,"mtime":1619892960224,"results":"43","hashOfConfig":"34"},{"size":1137,"mtime":1620237116308,"results":"44","hashOfConfig":"34"},{"size":1053,"mtime":1619892960228,"results":"45","hashOfConfig":"34"},{"size":737,"mtime":1619892960251,"results":"46","hashOfConfig":"34"},{"size":276,"mtime":1619892960248,"results":"47","hashOfConfig":"34"},{"size":545,"mtime":1620237240220,"results":"48","hashOfConfig":"34"},{"size":329,"mtime":1620237181839,"results":"49","hashOfConfig":"34"},{"size":2296,"mtime":1620237057587,"results":"50","hashOfConfig":"34"},{"size":2797,"mtime":1620235459267,"results":"51","hashOfConfig":"34"},{"size":1143,"mtime":1620236807231,"results":"52","hashOfConfig":"34"},{"size":1157,"mtime":1620235465086,"results":"53","hashOfConfig":"34"},{"size":5061,"mtime":1620236812347,"results":"54","hashOfConfig":"34"},{"size":3413,"mtime":1623953670104,"results":"55","hashOfConfig":"34"},{"size":3169,"mtime":1620236817938,"results":"56","hashOfConfig":"34"},{"size":4851,"mtime":1620532260866,"results":"57","hashOfConfig":"34"},{"size":1382,"mtime":1620236356868,"results":"58","hashOfConfig":"34"},{"size":7594,"mtime":1620236814384,"results":"59","hashOfConfig":"34"},{"size":642,"mtime":1620236836593,"results":"60","hashOfConfig":"34"},{"size":3004,"mtime":1620532257390,"results":"61","hashOfConfig":"34"},{"size":146,"mtime":1620236797850,"results":"62","hashOfConfig":"34"},{"size":9308,"mtime":1624528796037,"results":"63","hashOfConfig":"34"},{"size":791,"mtime":1620039237766,"results":"64","hashOfConfig":"34"},{"size":336,"mtime":1624528221038,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1dj71tv",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\index.js",[],["138","139"],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reportWebVitals.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\App.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reducers\\index.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reducers\\search.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\reducers\\isLoggedin.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\actions\\index.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Plot.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\CheckParallel.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Map.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Song.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\Tabs.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\animations\\loading\\loading.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\animations\\RotateDevice\\RotateDevice.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\FindIntersection.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\SplitLine.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\NavBar\\NavBar.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\AllSongs\\AllSongs.js",["140"],"import React, { useRef, useCallback } from \"react\";\r\nimport \"./AllSongs.css\";\r\nimport TopBar from \"./../../components/TopBar/topbar\";\r\nimport SongsSearch from \"../../hooks/SongsSearch\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport actions from \"./../../actions/index\";\r\nimport Loading from \"./../../animations/loading/loading\";\r\nimport songImage from \"./../../images/music_logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AllSongs() {\r\n  const selector = useSelector((state) => state.searchReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const { songs, hasMore, loading, error } = SongsSearch(\r\n    selector.query,\r\n    selector.pageNumber\r\n  );\r\n\r\n  const observer = useRef();\r\n\r\n  const lastSongElementRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          dispatch({ type: actions.INCREMENT_SEARCH_PAGE });\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, hasMore]\r\n  );\r\n\r\n  const renderedSongs = songs.map((song, index) => {\r\n    return (\r\n      <Link\r\n        className=\"songtile\"\r\n        ref={songs.length === index + 1 ? lastSongElementRef : null}\r\n        style={{\r\n          animationDelay: `${(index % 10) * 40}ms`,\r\n        }}\r\n        to={`PlaySong?title=${song.title}`}\r\n      >\r\n        <img src={songImage} className=\"songtile__icon\" alt=\"album cover\" />\r\n        <div className=\"songtile__name__container\">\r\n          <h3 className=\"songtitle\">{song.title}</h3>\r\n\r\n          <div\r\n            className=\"songtitle__info__container\"\r\n            style={{\r\n              animationDelay: `${index * 10}ms`,\r\n            }}\r\n          >\r\n            <h5 className=\"songtitle__info__artist songtitle__info__text\">\r\n              artist: {song.artist}\r\n            </h5>\r\n            <h5 className=\"songtitle__info__difficulty songtitle__info__text\">\r\n              {song.info1 === \"\" ? \"-\" : song.info1}\r\n            </h5>\r\n            <h5 className=\"songtitle__info__tuning songtitle__info__text\">\r\n              {song.info2 === \"\" ? \"-\" : song.info2}\r\n            </h5>\r\n            <h5 className=\"songtitle__info__capo songtitle__info__text\">\r\n              {song.info3 === \"\" ? \"-\" : song.info3}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"all-songs\">\r\n      <TopBar />\r\n      <ul id=\"ul\">\r\n        {renderedSongs}\r\n        <div className=\"loading_anim\">\r\n          {loading && hasMore ? <Loading /> : null}\r\n        </div>\r\n        <div>{error && \"Error\"}</div>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default AllSongs;\r\n","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\hooks\\SongsSearch.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\TopBar\\topbar.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\Settings\\Settings.js",["141","142"],"import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"../../Utils/axios\";\r\nimport axiosLib from \"axios\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport \"./Settings.css\";\r\n\r\nexport default function Settings() {\r\n  const user = useSelector((state) => state.isLoggedIn).user;\r\n\r\n  const [TextColor, setTextColor] = useState(\"\");\r\n  const [strokeColor, setStrokeColor] = useState(\"\");\r\n  const [TextCheck, setTextCheck] = useState(true);\r\n  const [strokeCheck, setstrokeCheck] = useState(true);\r\n  const [SliderValue, setSliderValue] = useState(user.speed);\r\n\r\n  const TextInput = useRef(null);\r\n  const StrokeInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const url = \"/api/v1/users/findbyemail?email=\" + user.email;\r\n    axios.get(url).then((res, err) => {\r\n      if (err) {\r\n        alert(err);\r\n        console.error(err);\r\n      } else {\r\n        setStrokeColor(`#${res.data.strokeColor}`);\r\n        setTextColor(`#${res.data.textColor}`);\r\n        setSliderValue(res.data.speed);\r\n        TextInput.current.value = `#${res.data.textColor}`;\r\n        StrokeInput.current.value = `#${res.data.strokeColor}`;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const validateColor = (str) => {\r\n    return str.match(/^#[a-f0-9]{6}$/i) !== null;\r\n  };\r\n\r\n  const handleStrokeColorChange = (event) => {\r\n    var color = event.target.value;\r\n    if (validateColor(color)) {\r\n      setstrokeCheck(true);\r\n      color = color.slice(1);\r\n      const url =\r\n        \"/api/v1/users/updateStrokeColor?email=\" +\r\n        user.email +\r\n        \"&color=\" +\r\n        color;\r\n      axios.put(url).then((res, err) => {\r\n        if (err) {\r\n          alert(err);\r\n          console.error(err);\r\n        } else setStrokeColor(event.target.value);\r\n      });\r\n    } else {\r\n      setstrokeCheck(false);\r\n    }\r\n  };\r\n\r\n  const handleTextColorChange = (event) => {\r\n    var color = event.target.value;\r\n    if (validateColor(color)) {\r\n      color = color.slice(1);\r\n      setTextCheck(true);\r\n      const url =\r\n        \"/api/v1/users/updateTextColor?email=\" + user.email + \"&color=\" + color;\r\n      axios.put(url).then((res, err) => {\r\n        if (err) {\r\n          alert(err);\r\n          console.error(err);\r\n        } else {\r\n          setTextColor(event.target.value);\r\n        }\r\n      });\r\n    } else {\r\n      setTextCheck(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(SliderValue);\r\n    let cancel;\r\n    var url =\r\n      \"/api/v1/users/updateSpeed?email=\" + user.email + \"&speed=\" + SliderValue;\r\n    axios({\r\n      method: \"PUT\",\r\n      url: url,\r\n      cancelToken: new axiosLib.CancelToken((c) => (cancel = c)),\r\n    }).catch((e) => {\r\n      if (axiosLib.isCancel(e)) return;\r\n      alert(e);\r\n    });\r\n    return () => cancel();\r\n  }, [SliderValue]);\r\n\r\n  return (\r\n    <div className=\"settings__box\">\r\n      <div className=\"settings__container\">\r\n        <h1\r\n          style={{ marginBottom: \"15px\", color: \"white\", marginLeft: \"20px\" }}\r\n        >\r\n          SETTINGS\r\n        </h1>\r\n\r\n        <label for=\"textcolor\" className=\"settings__label\">\r\n          Text Color\r\n        </label>\r\n        <div\r\n          className=\"setting__tile\"\r\n          id=\"textcolor\"\r\n          style={{\r\n            backgroundColor: !TextCheck\r\n              ? \"rgba(255, 0, 0, 0.6)\"\r\n              : \"rgba(255, 255, 255, 0.07)\",\r\n          }}\r\n        >\r\n          <div className=\"color__box\" style={{ backgroundColor: TextColor }} />\r\n          <input onChange={handleTextColorChange} ref={TextInput} />\r\n          <div className=\"color__checkbox\">\r\n            {!TextCheck ? <ClearIcon /> : <CheckIcon />}\r\n          </div>\r\n        </div>\r\n\r\n        <label for=\"strokecolor\" className=\"settings__label\">\r\n          Stroke Color\r\n        </label>\r\n        <div\r\n          className=\"setting__tile\"\r\n          id=\"strokecolor\"\r\n          style={{\r\n            backgroundColor: !strokeCheck\r\n              ? \"rgba(255, 0, 0, 0.6)\"\r\n              : \"rgba(255, 255, 255, 0.07)\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"color__box\"\r\n            style={{ backgroundColor: strokeColor }}\r\n          />\r\n          <input onChange={handleStrokeColorChange} ref={StrokeInput} />\r\n          <div className=\"color__checkbox\">\r\n            {!strokeCheck ? <ClearIcon /> : <CheckIcon />}\r\n          </div>\r\n        </div>\r\n        <label for=\"slider\" className=\"settings__label\">\r\n          Song Speed\r\n        </label>\r\n        <div\r\n          className=\"setting__tile\"\r\n          style={{ backgroundColor: \"rgba(255, 255, 255, 0.07)\" }}\r\n        >\r\n          <input\r\n            id=\"slider\"\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n            onChange={(e) => {\r\n              setSliderValue(e.target.value);\r\n            }}\r\n            value={SliderValue}\r\n          />\r\n          <h3 className=\"color__checkbox\">{SliderValue}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\login\\login.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\learnTab\\LearnTab.js",["143"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport axios from \"../../Utils/axios\";\r\nimport \"./LearnTab.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport tabs from \"./../../Utils/Tabs\";\r\nimport Promt from \"./../../components/Promt/Promt\";\r\nimport Image from \"./../../images/finger_coding.jpg\";\r\nimport Draw from \"../../hooks/Draw\";\r\nimport RotateDevice from \"./../../animations/RotateDevice/RotateDevice\";\r\n\r\nexport default function LearnTab(props) {\r\n  const User = useSelector((state) => state.isLoggedIn).user;\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const points = useRef(null);\r\n  const strokeColor = useRef(\"Red\");\r\n  const textColor = useRef(\"Red\");\r\n  const tab = useRef(\"\");\r\n\r\n  const [IsLanscape, setIsLanscape] = useState(\r\n    window.matchMedia(\"(orientation: landscape)\").matches\r\n  );\r\n\r\n  var supportsOrientationChange = \"onorientationchange\" in window,\r\n    orientationEvent = supportsOrientationChange\r\n      ? \"orientationchange\"\r\n      : \"resize\";\r\n  window.addEventListener(\r\n    orientationEvent,\r\n    function () {\r\n      setIsLanscape(window.matchMedia(\"(orientation: landscape)\").matches);\r\n    },\r\n    false\r\n  );\r\n\r\n  const getAnimation = () => {\r\n    const video = webcamRef.current;\r\n    const canvas = canvasRef.current;\r\n    const ptr = points.current;\r\n    if (video && canvas) {\r\n      var list = tabs.get(tab.current.value);\r\n      console.log(tab);\r\n      console.log(list);\r\n      Draw(canvas, video, ptr, list, textColor.current, strokeColor.current);\r\n      window.requestAnimationFrame(() => {\r\n        return getAnimation();\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAccountUrl = \"/api/v1/users/findbyemail?email=\" + User.email;\r\n    axios.get(getAccountUrl).then((res, err) => {\r\n      if (err) alert(err);\r\n      else {\r\n        points.current = res.data.guitar;\r\n        textColor.current = res.data.textColor;\r\n        strokeColor.current = res.data.strokeColor;\r\n      }\r\n    });\r\n\r\n    window.requestAnimationFrame(getAnimation);\r\n  }, []);\r\n\r\n  const videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: \"user\",\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {!IsLanscape ? (\r\n        <RotateDevice />\r\n      ) : (\r\n        <div className=\"playsong__container\">\r\n          <div className = \"learn__inputcontainer\">\r\n            <input  ref = {tab} className = \"learn__input\"/>\r\n          </div>\r\n          <canvas ref={canvasRef} className=\"playsong__canvas\" />\r\n          <div className=\"playsong__promt_area\">\r\n            <Promt\r\n              text=\"Rock On!\"\r\n              description=\"Press fret with same number as below \"\r\n              img={Image}\r\n            />\r\n            <Promt\r\n              text=\"Learn Theory\"\r\n              description=\"Enter the tab you want to learn.\"\r\n            />\r\n          </div>\r\n          <Webcam\r\n            className=\"playsong__cam\"\r\n            audio={false}\r\n            ref={webcamRef}\r\n            style={{ width: \"0%\", height: \"0%\" }}\r\n            videoConstraints={videoConstraints}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\PlaySong\\PlaySong.js",["144"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport axios from \"../../Utils/axios\";\r\nimport \"./PlaySong.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Song from \"./../../Utils/Song\";\r\nimport tabs from \"./../../Utils/Tabs\";\r\nimport Promt from \"./../../components/Promt/Promt\";\r\nimport Image from \"./../../images/finger_coding.jpg\";\r\nimport Draw from \"../../hooks/Draw\";\r\nimport RotateDevice from \"./../../animations/RotateDevice/RotateDevice\";\r\n\r\nexport default function PlaySong(props) {\r\n  const User = useSelector((state) => state.isLoggedIn).user;\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const points = useRef(null);\r\n  const song = useRef(null);\r\n  const pos = useRef(0);\r\n  const tab = useRef(null);\r\n  const getNextTimerId = useRef(null);\r\n  const playButton = useRef(null);\r\n  const strokeColor = useRef(\"Red\");\r\n  const textColor = useRef(\"Red\");\r\n  const speed = useRef(2);\r\n\r\n  const [Text, setText] = useState(\"\");\r\n  const [IsPaused, setIsPaused] = useState(true);\r\n  const [IsLanscape, setIsLanscape] = useState(\r\n    window.matchMedia(\"(orientation: landscape)\").matches\r\n  );\r\n\r\n  var supportsOrientationChange = \"onorientationchange\" in window,\r\n    orientationEvent = supportsOrientationChange\r\n      ? \"orientationchange\"\r\n      : \"resize\";\r\n  window.addEventListener(\r\n    orientationEvent,\r\n    function () {\r\n      setIsLanscape(window.matchMedia(\"(orientation: landscape)\").matches);\r\n    },\r\n    false\r\n  );\r\n\r\n  function getNext() {\r\n    console.log(pos.current);\r\n    const LYRICS = \"LYRICS\";\r\n    if (song.current) {\r\n      if (pos.current < song.current.length) {\r\n        if (song.current[pos.current].type === LYRICS) {\r\n          setText(song.current[pos.current].data);\r\n          pos.current = pos.current + 1;\r\n        }\r\n      }\r\n      if (pos.current < song.current.length) {\r\n        tab.current = song.current[pos.current].data;\r\n        pos.current = pos.current + 1;\r\n      }\r\n      if (pos.current >= song.current.length) {\r\n        if (playButton.current) playButton.current.classList.toggle(\"pause\");\r\n        setIsPaused(true);\r\n        pos.current = 0;\r\n        setText(\"\");\r\n        tab.current = null;\r\n        return;\r\n      }\r\n    }\r\n\r\n    getNextTimerId.current = setTimeout(getNext, speed.current * 1000);\r\n  }\r\n\r\n  const getAnimation = () => {\r\n    const video = webcamRef.current;\r\n    const canvas = canvasRef.current;\r\n    const ptr = points.current;\r\n    if (video && canvas) {\r\n      var list = tabs.get(tab.current);\r\n      Draw(canvas, video, ptr, list, textColor.current, strokeColor.current);\r\n      window.requestAnimationFrame(() => {\r\n        return getAnimation();\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    var Query = new URLSearchParams(props.location.search);\r\n    const getSongUrl = \"/api/v1/songs/getFromTitle?title=\" + Query.get(\"title\");\r\n    axios.get(getSongUrl).then((res, err) => {\r\n      if (err) alert(err);\r\n      else {\r\n        song.current = Song(res.data.data);\r\n        console.log(song.current);\r\n      }\r\n    });\r\n\r\n    const getAccountUrl = \"/api/v1/users/findbyemail?email=\" + User.email;\r\n    axios.get(getAccountUrl).then((res, err) => {\r\n      if (err) alert(err);\r\n      else {\r\n        points.current = res.data.guitar;\r\n        speed.current = res.data.speed;\r\n        textColor.current = res.data.textColor\r\n        strokeColor.current = res.data.strokeColor\r\n      }\r\n    });\r\n\r\n    window.requestAnimationFrame(getAnimation);\r\n  }, []);\r\n\r\n  const videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: \"user\",\r\n  };\r\n\r\n  const playPause = (e) => {\r\n    e.target.classList.toggle(\"pause\");\r\n    if (IsPaused) getNext();\r\n    else if (getNextTimerId.current) clearTimeout(getNextTimerId.current);\r\n\r\n    setIsPaused(!IsPaused);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!IsLanscape ? (\r\n        <RotateDevice />\r\n      ) : (\r\n        <div className=\"playsong__container\">\r\n          <canvas ref={canvasRef} className=\"playsong__canvas\" />\r\n          <div className=\"play__pause__button__container\">\r\n            <div\r\n              class=\"play play__pause__button\"\r\n              onClick={playPause}\r\n              ref={playButton}\r\n            />\r\n          </div>\r\n          {Text === \"\" ? null : <p className=\"lyrics\">{Text}</p>}\r\n          <div className=\"playsong__promt_area\">\r\n            <Promt\r\n              text=\"Rock On!\"\r\n              description=\"Press fret with same number as below \"\r\n              img={Image}\r\n            />\r\n          </div>\r\n          <Webcam\r\n            className=\"playsong__cam\"\r\n            audio={false}\r\n            ref={webcamRef}\r\n            style={{ width: \"0%\", height: \"0%\" }}\r\n            videoConstraints={videoConstraints}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\Promt\\Promt.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\addGuitar\\AddGuitar.js",["145"],"import React, { useRef, useState, useCallback, useEffect } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./AddGuitar.css\";\r\nimport Map from \"../../Utils/Map\";\r\nimport Plot from \"../../Utils/Plot\";\r\nimport Promt from \"../../components/Promt/Promt\";\r\nimport tutorial from \"./../../images/tutorial.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport NavigateNextSharpIcon from \"@material-ui/icons/NavigateNextSharp\";\r\nimport axios from \"../../Utils/axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CheckParallel from \"../../Utils/CheckParallel\";\r\nimport RotateDevice from \"../../animations/RotateDevice/RotateDevice\";\r\n\r\nconst AddGuitar = (props) => {\r\n  const user = useSelector((state) => state.isLoggedIn).user;\r\n\r\n  const AR = require(\"js-aruco\").AR;\r\n\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const p1 = useRef(null);\r\n  const p2 = useRef(null);\r\n  const p3 = useRef(null);\r\n  const p4 = useRef(null);\r\n  const origin = useRef({ x: 0, y: 0 });\r\n  const xaxis = useRef({ x: 0, y: 0 });\r\n\r\n  const [codeVisiblity, setCodeVisiblity] = useState(false);\r\n  const [DisableNext, setDisableNext] = useState(true);\r\n  const [IsParallel, setIsParallel] = useState(false);\r\n  const [IsLanscape, setIsLanscape] = useState(window.matchMedia(\"(orientation: landscape)\").matches)\r\n\r\n  const history = useHistory();\r\n  const returnToHomePage = useCallback(() => history.push(\"/Home\"), [history]);\r\n\r\n  var supportsOrientationChange = \"onorientationchange\" in window,\r\n    orientationEvent = supportsOrientationChange ? \"orientationchange\" : \"resize\";\r\n\r\n  window.addEventListener(orientationEvent, function() {\r\n      setIsLanscape(window.matchMedia(\"(orientation: landscape)\").matches)\r\n  }, false);\r\n\r\n  function drawImage() {\r\n    const video = webcamRef.current;\r\n    const canvas = canvasRef.current;\r\n\r\n    if (video && canvas) {\r\n      var ctx = canvas.getContext(\"2d\", { alpha: false });\r\n\r\n      // Draw Mirror Image\r\n      ctx.translate(canvas.width, 0);\r\n      ctx.scale(-1, 1);\r\n      ctx.drawImage(video.video, 0, 0, canvas.width, canvas.height);\r\n      ctx.translate(canvas.width, 0);\r\n      ctx.scale(-1, 1);\r\n\r\n      const detector = new AR.Detector();\r\n      var markers = detector.detect(ctx.getImageData(0, 0, 1280, 720));\r\n\r\n      if (markers.length > 0) {\r\n        if (CheckParallel(markers[0].corners)) {\r\n          setIsParallel(true);\r\n          ctx.fillStyle = \"red\";\r\n          var corners = markers[0].corners;\r\n          var result\r\n          if (p1.current !== null) {\r\n            result = Map(\r\n              corners[1].x,\r\n              corners[1].y,\r\n              corners[0].x,\r\n              corners[0].y,\r\n              p1.current.m_ratio,\r\n              p1.current.n_ratio\r\n            );\r\n            ctx.fillRect(result.x, result.y, 10, 10);\r\n          }\r\n\r\n          if (p2.current !== null) {\r\n            result = Map(\r\n              corners[1].x,\r\n              corners[1].y,\r\n              corners[0].x,\r\n              corners[0].y,\r\n              p2.current.m_ratio,\r\n              p2.current.n_ratio\r\n            );\r\n            ctx.fillRect(result.x, result.y, 10, 10);\r\n          }\r\n\r\n          if (p3.current !== null) {\r\n            result = Map(\r\n              corners[1].x,\r\n              corners[1].y,\r\n              corners[0].x,\r\n              corners[0].y,\r\n              p3.current.m_ratio,\r\n              p3.current.n_ratio\r\n            );\r\n            ctx.fillRect(result.x, result.y, 10, 10);\r\n          }\r\n\r\n          if (p4.current !== null) {\r\n            result = Map(\r\n              corners[1].x,\r\n              corners[1].y,\r\n              corners[0].x,\r\n              corners[0].y,\r\n              p4.current.m_ratio,\r\n              p4.current.n_ratio\r\n            );\r\n            ctx.fillRect(result.x, result.y, 10, 10);\r\n          }\r\n\r\n          ctx.stroke();\r\n          setCodeVisiblity(true);\r\n\r\n          origin.current = { x: corners[1].x, y: corners[1].y };\r\n          xaxis.current = { x: corners[0].x, y: corners[0].y };\r\n\r\n          ctx.stroke();\r\n        } else setIsParallel(false);\r\n      } else setCodeVisiblity(false);\r\n\r\n      window.requestAnimationFrame(() => {\r\n        return drawImage();\r\n      });\r\n    }\r\n  }\r\n\r\n  const addPoint = (e) => {\r\n    if (codeVisiblity && IsParallel) {\r\n      // Get Click Position\r\n      var x;\r\n      var y;\r\n      if (e.pageX || e.pageY) {\r\n        x = e.pageX;\r\n        y = e.pageY;\r\n      } else {\r\n        x =\r\n          e.clientX +\r\n          document.body.scrollLeft +\r\n          document.documentElement.scrollLeft;\r\n        y =\r\n          e.clientY +\r\n          document.body.scrollTop +\r\n          document.documentElement.scrollTop;\r\n      }\r\n\r\n      x -= canvasRef.current.offsetLeft;\r\n      y -= canvasRef.current.offsetTop;\r\n\r\n      let point = Plot(\r\n        origin.current.x,\r\n        origin.current.y,\r\n        xaxis.current.x,\r\n        xaxis.current.y,\r\n        x,\r\n        y\r\n      );\r\n\r\n      if (p1.current === null) p1.current = point;\r\n      else if (p2.current === null) p2.current = point;\r\n      else if (p3.current === null) p3.current = point;\r\n      else if (p4.current === null) {\r\n        p4.current = point;\r\n        setDisableNext(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestAnimationFrame(drawImage);\r\n  }, []);\r\n\r\n  const videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: \"user\",\r\n  };\r\n\r\n  const updateGuitar = () => {\r\n    const url =\r\n      \"/api/v1/users/updateGuitar?email=\" +\r\n      user.email +\r\n      \"&m_ratio1=\" +\r\n      p1.current.m_ratio +\r\n      \"&n_ratio1=\" +\r\n      p1.current.n_ratio +\r\n      \"&m_ratio2=\" +\r\n      p2.current.m_ratio +\r\n      \"&n_ratio2=\" +\r\n      p2.current.n_ratio +\r\n      \"&m_ratio3=\" +\r\n      p3.current.m_ratio +\r\n      \"&n_ratio3=\" +\r\n      p3.current.n_ratio +\r\n      \"&m_ratio4=\" +\r\n      p4.current.m_ratio +\r\n      \"&n_ratio4=\" +\r\n      p4.current.n_ratio;\r\n\r\n    axios.put(url).then((res, err) => {\r\n      returnToHomePage();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(!IsLanscape) ? (<RotateDevice />) : (\r\n      <div className=\"addguitar__container\">\r\n        <div className=\"promt_area\">\r\n          {!codeVisiblity ? (\r\n            <Promt\r\n              variant=\"error\"\r\n              text=\"Can't find guitar!\"\r\n              description=\"Please make sure guitar with valid marker is present in frame.\"\r\n            />\r\n          ) : null}\r\n          {codeVisiblity && !IsParallel ? (\r\n            <Promt\r\n              variant=\"error\"\r\n              text=\"Guitar not parallel\"\r\n              description=\"Make sure guitar is parallel to the camera.\"\r\n            />\r\n          ) : null}\r\n          <Promt img={tutorial} text=\"Select corners of fretboard\" />\r\n        </div>\r\n        <div className=\"next__button\">\r\n          <Button\r\n            onClick={updateGuitar}\r\n            variant=\"contained\"\r\n            endIcon={<NavigateNextSharpIcon />}\r\n            disabled={DisableNext}\r\n          >\r\n            <h3 className=\"addguitar__button-text\">NEXT</h3>\r\n          </Button>\r\n        </div>\r\n\r\n        <canvas\r\n          width=\"1280\"\r\n          height=\"720\"\r\n          ref={canvasRef}\r\n          className=\"canvas\"\r\n          onClick={addPoint}\r\n        />\r\n        <Webcam\r\n          className=\"cam\"\r\n          audio={false}\r\n          ref={webcamRef}\r\n          style={{ width: \"0%\", height: \"0%\" }}\r\n          videoConstraints={videoConstraints}\r\n        />\r\n      </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddGuitar;\r\n","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\firebase.js",["146"],"import firebase from \"firebase\"\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDjMeNAr35XlY9pqqgp5j9ZsO_AlQ9gquc\",\r\n    authDomain: \"mydevice-186508.firebaseapp.com\",\r\n    projectId: \"mydevice-186508\",\r\n    storageBucket: \"mydevice-186508.appspot.com\",\r\n    messagingSenderId: \"139186884048\",\r\n    appId: \"1:139186884048:web:fac91f38553e6d9f233dd5\",\r\n    measurementId: \"G-JCPWDVS8J1\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig) \r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst auth = firebase.auth()\r\n\r\nexport {auth, provider}\r\n","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\hooks\\Draw.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\Utils\\axios.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\views\\Info\\Info.js",["147"],"import React, { useEffect } from \"react\";\r\nimport \"./Info.css\";\r\nimport logo from \"./../../images/GuitAR-logos_white.png\";\r\nimport gsap, { TweenLite } from \"gsap\";\r\nimport ImageContainer from \"../../components/ImageContainer/ImageContainer\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport speed from \"./../../images/speed.jpg\";\r\nimport game from \"./../../images/game.jpg\";\r\nimport time from \"./../../images/time.jpg\";\r\nimport crowd from \"./../../images/crowd.jpg\";\r\nimport Steps from \"../../components/Steps/Steps\";\r\nimport login from \"./../../images/login.svg\";\r\nimport setting from \"./../../images/setting.svg\";\r\nimport music from \"./../../images/music.svg\";\r\nimport rocket from \"./../../images/rocket.svg\";\r\nimport LearningExperience from \"./../../images/Learning Experience.png\";\r\nimport bottomLogo from \"./../../images/vertical_logo.png\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nfunction Info() {\r\n  gsap.registerPlugin(ScrollTrigger);\r\n  useEffect(() => {\r\n\r\n    TweenLite.from(\".info__imagecontainer\", 1, {\r\n      opacity: 0,\r\n      visiblity: \"hidden\",\r\n      scrollTrigger: {\r\n        trigger: \".info__imagecontainer\",\r\n        scrub: true,\r\n        end: \"center\",\r\n      },\r\n    });\r\n\r\n    TweenLite.fromTo(\r\n      \"#text1\",\r\n      {\r\n        x: 5000,\r\n        opacity: 0,\r\n      },\r\n      {\r\n        x: -2000,\r\n        opacity: 1,\r\n        scrollTrigger: {\r\n          trigger: \"#text1\",\r\n          scrub: true,\r\n          end: \"top\",\r\n        },\r\n      }\r\n    );\r\n\r\n    TweenLite.fromTo(\r\n      \"#text2\",\r\n      {\r\n        x: 2000,\r\n        opacity: 0,\r\n      },\r\n      {\r\n        x: -2500,\r\n        opacity: 1,\r\n        scrollTrigger: {\r\n          trigger: \"#text2\",\r\n          scrub: true,\r\n          end: \"top\",\r\n        },\r\n      }\r\n    );\r\n\r\n    TweenLite.from(\".info__stepsindividual\", 1, {\r\n      opacity: 0,\r\n      y: 100,\r\n      scrollTrigger: {\r\n        trigger: \".info__stepsindividual\",\r\n        scrub: true,\r\n        end: \"top\",\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"info\">\r\n      <a href=\"Home\">\r\n        <div className=\"getstarted__button\">\r\n          <PlayArrowIcon fontSize=\"large\" />\r\n          <h3>GET STARTED</h3>\r\n        </div>\r\n      </a>\r\n\r\n      <a href=\"https://guitar-backend.herokuapp.com/api/v1/downloads/Marker\">\r\n        <div className=\"download__button\">\r\n          <GetAppIcon fontSize=\"large\" />\r\n        </div>\r\n      </a>\r\n\r\n      <div className=\"info__topv\">\r\n        <div className=\"info__logo__container\">\r\n          <img src={logo} className=\"info__logo\" alt=\"logo\" />\r\n          <h1 className=\"info__toptext\">Learning Guitar Simplified!</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"info__scrollcontainer\">\r\n        <h1 className=\"info__scrolltext\" id=\"text1\">\r\n          Guit.AR is guitar minus redundancy\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"intoduction__page\">\r\n        <h2>What is GuitAR?</h2>\r\n        <p>\r\n          {`  GuitAR is an AR based webapp which helps beginners to learn guitar.\r\n          It highlights the strings to be plucked on the guitar in your camera\r\n          feed so all you have to do is strike the highlighted strings to play\r\n          your favourite music!`}\r\n        </p>\r\n        <p>\r\n          {`GuitAR allows you to practice guitar by playing actual songs so that you \r\n          can skip the boring parts of learning guitar. GuitAR aims to make the process\r\n          of learning basics of guitar not only faster but also more interesting.\r\n          `}\r\n        </p>\r\n        <img src = {LearningExperience}/>\r\n        <h2>Why GuitAR?</h2>\r\n      </div>\r\n      \r\n      <div className=\"info__imagelist\">\r\n        <ImageContainer color=\"#F7DF1E\" title=\"Faster Learning\" img={speed}>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"GuitAR improves learning speed by around 40%. Traditionally user \r\n            has to look at cords and the count the strings and frets but we \r\n            directly project them on the guitar making it much easier and faster. It helps building\r\n            muscle memory by giving live visual feedback to the user. Visual\r\n            feedback (VFb) is proven to boost the acquisition and retention stages\r\n            of motor learning associated with training in a reaching task.\"\r\n          />\r\n          GuitAR improves learning speed by around 40%. Traditionally user has\r\n          to look at cords and the count the strings and frets but we directly\r\n          project them on the guitar making it much easier and faster. It helps\r\n          building muscle memory by giving live visual feedback to the user.\r\n          Visual feedback (VFb) is proven to boost the acquisition and retention\r\n          stages of motor learning associated with training in a reaching task.\r\n        </ImageContainer>\r\n        <ImageContainer color=\"#DD0031\" title=\"Guitar Gamified\" img={game}>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Turn your guitar into a musical game using GuitAR. It turns your\r\n            guitar into a arcade game where the objective is to strike the\r\n            highlighted string within particular time. Learn faster and smarter\r\n            with GuitAR.GuitAR gamifies guitar into a arcade games where user has to \r\n            pluck highlighted cords within a particular time which could provide a \r\n            great activity for children without trapping them in a digital world.\"\r\n          />\r\n          Turn your guitar into a musical game using GuitAR. It turns your\r\n          guitar into a arcade game where the objective is to strike the\r\n          highlighted string within particular time. Learn faster and smarter\r\n          with GuitAR.GuitAR gamifies guitar into a arcade games where user has\r\n          to pluck highlighted cords within a particular time which could\r\n          provide a great activity for children without trapping them in a\r\n          digital world.\r\n        </ImageContainer>\r\n        <ImageContainer color=\"#61DAFB\" title=\"Skip The Boring\" img={time}>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Learning Guitar comes with learning lot of redundant stuff before you\r\n            play any song. Normally a new guitarist has to learn multiple tabs \r\n            before they can perform actual songs which can get frustrating.\r\n             With guitAR, user can directly start playing songs from their \r\n             first day. GuitAR helps you to cut the clutter and get you\r\n            started with playing interesting music right from the first day.\"\r\n          />\r\n          Learning Guitar comes with learning lot of redundant stuff before you\r\n          play any song. Normally a new guitarist has to learn multiple tabs\r\n          before they can perform actual songs which can get frustrating. With\r\n          guitAR, user can directly start playing songs from their first day.\r\n          GuitAR helps you to cut the clutter and get you started with playing\r\n          interesting music right from the first day.\r\n        </ImageContainer>\r\n        <ImageContainer color=\"#663399\" title=\"Attract Eyeballs\" img={crowd}>\r\n          <meta\r\n            name=\"description\"\r\n            content=\"GuitAR can be used by various institutes and universities that teach music to \r\n            teach their students string instruments while sitting at home especially during\r\n             lock down. It can also be used as great complement for traditional methods. \r\n              Our Innovative solutions improve learning speed and quality making\r\n              GuitAR great complement for your music institution. GuitAR adds\r\n              charm to you organization attracting more students.\"\r\n          />\r\n          GuitAR can be used by various institutes and universities that teach\r\n          music to teach their students string instruments while sitting at home\r\n          especially during lock down. It can also be used as great complement\r\n          for traditional methods. Our Innovative solutions improve learning\r\n          speed and quality making GuitAR great complement for your music\r\n          institution. GuitAR adds charm to you organization attracting more\r\n          students.\r\n        </ImageContainer>\r\n      </div>\r\n\r\n      <div className=\"info__stepsconatiner\">\r\n        <div className=\"info__scrollcontainer\">\r\n          <h1 className=\"info__scrolltext\" id=\"text2\">\r\n            LEARN GUITAR THE SMART WAY\r\n          </h1>\r\n        </div>\r\n        <div className=\"info__steps\">\r\n          <Steps img={login} text=\"Login With Google\" />\r\n          <Steps img={setting} text=\"Set-up Your Guitar\" />\r\n          <Steps img={music} text=\"Find Your Favourite Music\" />\r\n          <Steps img={rocket} text=\"Take Off...\" />\r\n        </div>\r\n\r\n        <div className=\"videoplayer_container\">\r\n          <ReactPlayer\r\n            className=\"info__videoplayer\"\r\n            url=\"https://vimeo.com/544604493\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"info__bottom\">\r\n        <img src={bottomLogo} alt=\"logo\" />\r\n        <h3>Content & Graphics © 2021 GuitAR LLC</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\ImageContainer\\ImageContainer.js",[],"C:\\Users\\prath\\OneDrive\\Desktop\\guitar-app\\src\\components\\Steps\\Steps.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":33,"column":5,"nodeType":"154","endLine":33,"endColumn":23,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"156","line":36,"column":6,"nodeType":"154","endLine":36,"endColumn":8,"suggestions":"157"},{"ruleId":"152","severity":1,"message":"156","line":97,"column":6,"nodeType":"154","endLine":97,"endColumn":19,"suggestions":"158"},{"ruleId":"152","severity":1,"message":"159","line":65,"column":6,"nodeType":"154","endLine":65,"endColumn":8,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"161","line":109,"column":6,"nodeType":"154","endLine":109,"endColumn":8,"suggestions":"162"},{"ruleId":"152","severity":1,"message":"163","line":176,"column":6,"nodeType":"154","endLine":176,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":13,"column":7,"nodeType":"167","messageId":"168","endLine":13,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":123,"column":9,"nodeType":"171","endLine":123,"endColumn":42},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["175"],["176"],"React Hook useEffect has missing dependencies: 'User.email' and 'getAnimation'. Either include them or remove the dependency array.",["177"],"React Hook useEffect has missing dependencies: 'User.email', 'getAnimation', and 'props.location.search'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has a missing dependency: 'drawImage'. Either include it or remove the dependency array.",["179"],"no-unused-vars","'firebaseApp' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [loading, hasMore, dispatch]",{"range":"192","text":"193"},"Update the dependencies array to be: [user.email]",{"range":"194","text":"195"},"Update the dependencies array to be: [SliderValue, user.email]",{"range":"196","text":"197"},"Update the dependencies array to be: [User.email, getAnimation]",{"range":"198","text":"199"},"Update the dependencies array to be: [User.email, getAnimation, props.location.search]",{"range":"200","text":"201"},"Update the dependencies array to be: [drawImage]",{"range":"202","text":"203"},[1131,1149],"[loading, hasMore, dispatch]",[1283,1285],"[user.email]",[2875,2888],"[SliderValue, user.email]",[2092,2094],"[User.email, getAnimation]",[3536,3538],"[User.email, getAnimation, props.location.search]",[5376,5378],"[drawImage]"]